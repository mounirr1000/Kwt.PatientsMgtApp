@using Kwt.PatientsMgtApp.WebUI.Infrastructure
@model Kwt.PatientsMgtApp.Core.Models.CompanionModel

@{
    ViewBag.Title = "Companion Details";
}


<div class="mt-3">
    <p>
        <a href="@Url.Action("List")" class="k-button"><i class="fa fa-arrow-left" style="color: lightblue"></i> Back to List</a>
        @if (User.IsInAnyRoles(CrudRoles.CompanionUpdateRoles))
        {
            <a href="@Url.Action("Edit", new {companionCid = Model.CompanionCID, patientCid = Model.PatientCID})" class="k-button"><i class="fa fa-pencil" style="color: blueviolet"></i> Edit</a>
        }
    </p>
</div>
<div class="loader"></div>
<div id="contentCompanionDetail" style="visibility:hidden;">
    <button data-toggle="collapse" data-target="#companionDetails"><i></i> Companion Info</button>
    <fieldset id="companionDetails" class="collapse show">
        `
        <ul class="fieldlist row">
            <li class="col-md-4">
                @Html.LabelFor(model => model.CompanionCID, new { @class = "" })
                @Html.TextBoxFor(model => model.CompanionCID, new { @class = "k-textbox edit", style = "width: 100%;", disabled = "disabled" })
            </li>

            <li class="col-md-4">
                @Html.LabelFor(model => model.Name, new { @class = "" })
                @Html.TextBoxFor(model => model.Name, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-4">
                @Html.LabelFor(model => model.PatientCID, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.PatientCID, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-4">
                @Html.LabelFor(model => model.DateIn, new { @class = "" })
                @Html.TextBoxFor(model => (model.DateInFormatted), new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-4">
                @Html.LabelFor(model => model.DateOut, new { @class = "" })
                @Html.TextBoxFor(model => model.DateOutFormatted, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-4">
                @Html.LabelFor(model => model.IsActive, new { @class = "" })
                @Html.TextBoxFor(model => model.IsActive, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-4">
                @Html.LabelFor(model => model.Notes, new { @class = "" })
                @Html.TextAreaFor(model => model.Notes, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-4">
                @Html.LabelFor(model => model.CompanionType, new { @class = "" })
                @Html.TextBoxFor(model => model.CompanionType, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
        </ul>
    </fieldset>

    @if (User.IsInAnyRoles("Super Admin", "Admin", "Manager", "Auditor"))
    {
        if (Model.IsBeneficiary)
        {
            <button data-toggle="collapse" data-target="#companionBankInfo"><i></i> Companion Bank Info</button>
            <fieldset id="companionBankInfo" class="collapse">
                <legend></legend>
                <ul class="fieldlist row">
                    <li class="col-md-2">
                        @Html.LabelFor(model => model.IsBeneficiary, new { @class = "" })
                        @Html.TextBoxFor(model => model.IsBeneficiary, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
                    </li>
                    <li class="col-md-6">
                        @Html.LabelFor(model => model.BankName, new { @class = "" })
                        @Html.TextBoxFor(model => model.BankName, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
                    </li>
                    <li class="col-md-2">
                        @Html.LabelFor(model => model.BankCode, new { @class = "" })
                        @Html.TextBoxFor(model => model.BankCode, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
                    </li>
                    <li class="col-md-6">
                        @Html.LabelFor(model => model.IBan, new { @class = "" })
                        @Html.TextBoxFor(model => model.IBan, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
                    </li>
                </ul>
            </fieldset>
        }
    }

    <button data-toggle="collapse" data-target="#auditInformation"><i></i> Audit Info</button>
    <fieldset id="auditInformation" class="collapse">
        <legend></legend>
        <ul class="fieldlist row">
            <li class="col-md-4">
                @Html.LabelFor(model => model.CreatedBy, new { @class = "" })
                @Html.TextBoxFor(model => model.CreatedBy, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-4">
                @Html.LabelFor(model => model.CreatedDate, new { @class = "" })
                @Html.TextBoxFor(model => model.CreatedDateFormatted, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-4">
                @Html.LabelFor(model => model.ModifiedBy, new { @class = "" })
                @Html.TextBoxFor(model => model.ModifiedBy, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-4">
                @Html.LabelFor(model => model.ModifiedDate, new { @class = "" })
                @Html.TextBoxFor(model => model.ModifiedDateFormatted, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
        </ul>
    </fieldset>

</div>

@section Scripts{
    <script type="text/javascript">

        $('document').ready(function () {
            $("#contentCompanionDetail").css("visibility", "visible");
            $(".loader").css("display", "none");
            $('#contentCompanionDetail button').addClass('btn btn-block mb-2 text-uppercase text-white bg-info');
            //fa fa-angle-double-down pull-left
            $('#contentCompanionDetail button i').addClass('fa fa-angle-double-down pull-left');
            $("#contentCompanionDetail").css("visibility", "visible");
            $(".loader").css("display", "none");

            $('#contentCompanionDetail button').click(function () {

                var $this = this;
                var caret = $($this).find('i');
                if ($(caret).hasClass('fa-angle-double-down'))
                    $(caret).removeClass('fa-angle-double-down').addClass("fa-angle-double-up");
                else
                    $(caret).removeClass('fa-angle-double-up').addClass("fa-angle-double-down");

            });
        });
    </script>
}