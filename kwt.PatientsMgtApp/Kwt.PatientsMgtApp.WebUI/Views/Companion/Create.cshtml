
@using Kwt.PatientsMgtApp.WebUI.Infrastructure
@model Kwt.PatientsMgtApp.Core.Models.CompanionModel

@{
    ViewBag.Title = "Companion Details";
}

<div class="loader"></div>
<div id="contentCompanionDetail" style="visibility: hidden;">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="pr-3">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
        </div>
        <div class="mt-3">
            <p>
                @*<input type="submit" value="Save" class="k-button m-3"/>*@
                <a href="@Url.Action("List")" class="k-button"><i class="fa fa-ban" style="color: lightblue"></i> Cancel</a>
                @*@Html.ActionLink("Back to List", "Index", null, new {@class = "k-button m-3"})*@
                <button type="submit" class="k-button"><i class="fa fa-save" style="color: blueviolet"></i> Save</button>               
            </p>
        </div>
        <fieldset>
            <legend>Companion Info</legend>
            <ul class="fieldlist">
                <li>
                    @Html.LabelFor(model => model.CompanionCID, new { @class = "" })
                    @Html.TextBoxFor(model => model.CompanionCID, new { @class = "k-textbox", style = "width: 100%;" })
                    <div>@Html.ValidationMessageFor(model => model.CompanionCID, "", new { @class = "text-danger" })</div>
                </li>
                <li>
                    @Html.LabelFor(model => model.CompanionFName, new { @class = "" })
                    @Html.TextBoxFor(model => model.CompanionFName, new { @class = "k-textbox", style = "width: 100%;" })
                    <div>@Html.ValidationMessageFor(model => model.CompanionFName, "", new { @class = "text-danger" })</div>
                </li>
                <li>
                    @Html.LabelFor(model => model.CompanionMName, new { @class = "" })
                    @Html.TextBoxFor(model => model.CompanionMName, new { @class = "k-textbox", style = "width: 100%;" })
                    <div>@Html.ValidationMessageFor(model => model.CompanionMName, "", new { @class = "text-danger" })</div>
                </li>
                <li>
                    @Html.LabelFor(model => model.CompanionLName, new { @class = "" })
                    @Html.TextBoxFor(model => model.CompanionLName, new { @class = "k-textbox", style = "width: 100%;" })
                    <div>@Html.ValidationMessageFor(model => model.CompanionLName, "", new { @class = "text-danger" })</div>
                </li>

                <li>
                    @Html.LabelFor(model => model.PatientCID, new { @class = "" })
                    @Html.TextBoxFor(model => model.PatientCID, new { @class = "k-textbox", style = "width: 100%;" })
                    <div> @Html.ValidationMessageFor(model => model.PatientCID, "", new { @class = "text-danger" })</div>
                </li>
                <li>
                    @Html.LabelFor(model => model.DateIn, new { @class = "" })
                    @*@Html.TextBoxFor(model => (model.DateIn), new { @class = "k-textbox", style = "width: 100%;" })*@
                    @Html.TextBoxFor(model => model.DateIn, "{0:MM/dd/yyyy}", new { @class = "", style = "width: 70%" })
                    <div>@Html.ValidationMessageFor(model => model.DateIn, "", new { @class = "text-danger" })</div>
                </li>
                <li>
                    @Html.LabelFor(model => model.DateOut, new { @class = "" })
                    @*@Html.TextBoxFor(model => model.DateOut, new { @class = "k-textbox", style = "width: 100%;" })*@
                    @Html.TextBoxFor(model => model.DateOut, "{0:MM/dd/yyyy}", new { @class = "", style = "width: 70%" })
                    <div>@Html.ValidationMessageFor(model => model.DateOut, "", new { @class = "text-danger" })</div>
                </li>
                <li>
                    @Html.LabelFor(model => model.IsActive, new { @class = "" })
                    @Html.EditorFor(model => model.IsActive, new { @class = "k-textbox", style = "width: 100%;" })
                    <div> @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })</div>
                </li>
                <li>
                    @Html.LabelFor(model => model.Notes, new { @class = "" })
                    @Html.TextAreaFor(model => model.Notes, new { @class = "k-textbox", style = "width: 100%;" })
                    <div> @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })</div>
                </li>
                <li>
                    @Html.LabelFor(model => model.CompanionType, new { @class = "" })
                    @*@Html.TextBoxFor(model => model.CompanionType, new { @class = "k-textbox", style = "width: 100%;" })*@
                    @Html.DropDownListFor(model => model.CompanionType, new List<SelectListItem>(Model.CompanionTypes.Select(a => new SelectListItem()
               {
                   Text = a.CompanionType,
                   Value = a.CompanionType

               }).ToList()), "", new { style = "width:50%" })
                    <div>@Html.ValidationMessageFor(model => model.CompanionType, "", new { @class = "text-danger" })</div>
                </li>
            </ul>
        </fieldset>

        if (User.IsInAnyRoles("Admin", "Manager", "Auditor"))
        {
            //if (Model.IsBeneficiary)
            //{
            <fieldset>
                <legend>Companion Bank Info</legend>
                <ul class="fieldlist">
                    <li>
                        @Html.LabelFor(model => model.IsBeneficiary, new { @class = "" })
                        @Html.EditorFor(model => model.IsBeneficiary, new { @class = "k-textbox", style = "width: 100%;" })
                        <div>@Html.ValidationMessageFor(model => model.IsBeneficiary, "", new { @class = "text-danger" })</div>
                    </li>
                    <li>
                        @Html.LabelFor(model => model.BankName, new { @class = "" })
                        @*@Html.TextBoxFor(model => model.BankName, new { @class = "k-textbox", style = "width: 100%;" })*@
                        @Html.DropDownListFor(model => model.BankName, new List<SelectListItem>(Model.Banks.Select(a => new SelectListItem()
                   {
                       Text = a.BankName,
                       Value = a.BankName

                   }).ToList()), "", new { style = "width:50%" })
                        <div> @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })</div>
                    </li>

                    <li>
                        @Html.LabelFor(model => model.IBan, new { @class = "" })
                        @Html.TextBoxFor(model => model.IBan, new { @class = "k-textbox", style = "width: 100%;" })
                        <div>@Html.ValidationMessageFor(model => model.IBan, "", new { @class = "text-danger" })</div>
                    </li>
                </ul>
            </fieldset>
            //}
        }

        
        <div class="mt-3">
            <p>
                @*<input type="submit" value="Save" class="k-button m-3"/>*@
                <a href="@Url.Action("List")" class="k-button"><i class="fa fa-ban" style="color: lightblue"></i> Cancel</a>
                @*@Html.ActionLink("Back to List", "Index", null, new {@class = "k-button m-3"})*@
                <button type="submit" class="k-button"><i class="fa fa-save" style="color: blueviolet"></i> Save</button>               
                
            </p>
        </div>
    }


</div>


@section Scripts{
    <script type="text/javascript">

        $('document').ready(function () {
            $("#contentCompanionDetail").css("visibility", "visible");
            $(".loader").css("display", "none");
            $("#DateIn, #DateOut").kendoDatePicker();
            $("#IBan").kendoMaskedTextBox({
                mask: "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
                //
            });
            $("#CompanionCID").kendoMaskedTextBox({
                mask: "AAAAAAAAAAAA"
            });
            $("#PatientCID").kendoMaskedTextBox({
                mask: "AAAAAAAAAAAA"
            });
        });
    </script>
}





@*@model Kwt.PatientsMgtApp.Core.Models.CompanionModel

    @{
        ViewBag.Title = "Create Companion";
    }*@

@*<!DOCTYPE html>

    <html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>Create</title>
    </head>
    <body>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Companion</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanionCID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.CompanionCID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanionCID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanionFName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.CompanionFName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanionFName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanionMName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.CompanionMName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanionMName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanionLName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.CompanionLName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanionLName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PatientCID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.PatientCID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PatientCID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.DropDownListFor(model => model.BankName, new List<SelectListItem>(Model.Banks.Select(a => new SelectListItem()
                   {
                       Text = a.BankName,
                       Value = a.BankName

                   }).ToList()), "")
                        @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BankCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.DropDownListFor(model => model.BankName, new List<SelectListItem>(Model.Banks.Select(a => new SelectListItem()
                   {
                       Text = a.BankCode,
                       Value = a.BankCode

                   }).ToList()), "")
                        @Html.ValidationMessageFor(model => model.BankCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IBan, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.IBan, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IBan, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateIn, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DateIn, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.DateIn, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateOut, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DateOut, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.DateOut, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.TextBoxFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsBeneficiary, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.TextBoxFor(model => model.IsBeneficiary)
                            @Html.ValidationMessageFor(model => model.IsBeneficiary, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanionType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">


                        @Html.DropDownListFor(model => model.CompanionType, new List<SelectListItem>(Model.CompanionTypes.Select(a => new SelectListItem()
                   {
                       Text = a.CompanionType,
                       Value = a.CompanionType

                   }).ToList()), "")@Html.ValidationMessageFor(model => model.CompanionType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "List")
        </div>
    </body>
    </html>*@
