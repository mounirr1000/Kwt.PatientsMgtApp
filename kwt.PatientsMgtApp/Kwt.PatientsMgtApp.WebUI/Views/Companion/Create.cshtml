
@using Kwt.PatientsMgtApp.WebUI.Infrastructure
@model Kwt.PatientsMgtApp.Core.Models.CompanionModel

@{
    ViewBag.Title = "Companion Details";
    var isvalid = ViewBag.IsValid as Boolean? ?? true;
}

<div class="loader"></div>
<div id="contentCompanionDetail" style="visibility: hidden;">
    @using (Html.BeginForm("Create", "Companion", FormMethod.Post, new { @class = ".k-form", id = "companionForm" }))
    //@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="pr-3">
            @Html.ValidationSummary(false, "", new {@class = "text-danger"})
            @Html.HiddenFor(model => model.Id)
        </div>
        <div class="mt-3">
            <p>
                <a href="@Url.Action("List")" class="k-button"><i class="fa fa-ban" style="color: lightblue"></i> Cancel</a>
                <button type="submit" class="k-button"><i class="fa fa-save" style="color: blueviolet"></i> Save</button>
            </p>
        </div>
        <div id="newCompanion">

            <button data-toggle="collapse" data-target="#companionInfo"><i></i> Companion Info</button>
            <fieldset id="companionInfo" class="collapse show">
                <legend></legend>
                <ul class="fieldlist row">
                    <li class="col-md-4">
                        @Html.LabelFor(model => model.CompanionCID, new {@class = ""})
                        @Html.TextBoxFor(model => model.CompanionCID, new {@class = "k-textbox", style = "width: 100%;"})
                        <div>@Html.ValidationMessageFor(model => model.CompanionCID, "", new {@class = "text-danger"})</div>
                    </li>
                    <li class="col-md-4">
                        @Html.LabelFor(model => model.PatientCID, new {@class = ""})
                        @Html.TextBoxFor(model => model.PatientCID, new {@class = "k-textbox", style = "width: 100%;"})
                        <div> @Html.ValidationMessageFor(model => model.PatientCID, "", new {@class = "text-danger"})</div>
                    </li>
                    <li class="col-md-4">
                        @Html.LabelFor(model => model.IsActive, new {@class = ""})
                        @Html.EditorFor(model => model.IsActive, new {@class = "k-textbox", style = "width: 100%;"})
                        <div> @Html.ValidationMessageFor(model => model.IsActive, "", new {@class = "text-danger"})</div>
                    </li>
                    <li class="col-md-4">
                        @Html.LabelFor(model => model.CompanionFName, new {@class = ""})
                        @Html.TextBoxFor(model => model.CompanionFName, new {@class = "k-textbox", style = "width: 100%;"})
                        <div>@Html.ValidationMessageFor(model => model.CompanionFName, "", new {@class = "text-danger"})</div>
                    </li>
                    <li class="col-md-4">
                        @Html.LabelFor(model => model.CompanionMName, new {@class = ""})
                        @Html.TextBoxFor(model => model.CompanionMName, new {@class = "k-textbox", style = "width: 100%;"})
                        <div>@Html.ValidationMessageFor(model => model.CompanionMName, "", new {@class = "text-danger"})</div>
                    </li>
                    <li class="col-md-4">
                        @Html.LabelFor(model => model.CompanionLName, new {@class = ""})
                        @Html.TextBoxFor(model => model.CompanionLName, new {@class = "k-textbox", style = "width: 100%;"})
                        <div>@Html.ValidationMessageFor(model => model.CompanionLName, "", new {@class = "text-danger"})</div>
                    </li>

                    <li class="col-md-4">
                        @Html.LabelFor(model => model.CompanionType, new {@class = ""})
                        @Html.DropDownListFor(model => model.CompanionType, new List<SelectListItem>(Model.CompanionTypes.Select(a => new SelectListItem()
                        {
                            Text = a.CompanionType,
                            Value = a.CompanionType

                        }).ToList()), "", new {style = "width:50%"})
                        <div>@Html.ValidationMessageFor(model => model.CompanionType, "", new {@class = "text-danger"})</div>
                    </li>

                    <li class="col-md-4">
                        @Html.LabelFor(model => model.DateIn, new {@class = ""})

                        @Html.TextBoxFor(model => model.DateIn, "{0:MM/dd/yyyy}", new {@class = "", style = "width: 70%"})
                        <div>@Html.ValidationMessageFor(model => model.DateIn, "", new {@class = "text-danger"})</div>
                    </li>
                    <li class="col-md-4">
                        @Html.LabelFor(model => model.DateOut, new {@class = ""})

                        @Html.TextBoxFor(model => model.DateOut, "{0:MM/dd/yyyy}", new {@class = "", style = "width: 70%"})
                        <div>@Html.ValidationMessageFor(model => model.DateOut, "", new {@class = "text-danger"})</div>
                    </li>

                    <li class="col-md-4">
                        @Html.LabelFor(model => model.Notes, new {@class = ""})
                        @Html.TextAreaFor(model => model.Notes, new {@class = "k-textbox", style = "width: 100%;"})
                        <div> @Html.ValidationMessageFor(model => model.Notes, "", new {@class = "text-danger"})</div>
                    </li>

                </ul>
            </fieldset>

            @if (User.IsInAnyRoles("Admin", "Manager", "Auditor"))
            {
                //if (Model.IsBeneficiary)
                //{

                <button data-toggle="collapse" data-target="#companionBankInfo"><i></i> Companion Bank Info</button>
                <fieldset id="companionBankInfo" class="collapse">
                    <legend></legend>
                    <ul class="fieldlist row">
                        <li class="col-md-8">
                            @Html.LabelFor(model => model.IsBeneficiary, new {@class = ""})
                            @Html.EditorFor(model => model.IsBeneficiary, new {@class = "k-textbox", style = "width: 100%;"})
                            <div>@Html.ValidationMessageFor(model => model.IsBeneficiary, "", new {@class = "text-danger"})</div>
                        </li>
                        <li id="bankInfo" class="col-md-12">
                            <ul>
                                <li class="col-md-6">
                                    @Html.LabelFor(model => model.BankName, new {@class = ""})
                                    @Html.DropDownListFor(model => model.BankName, new List<SelectListItem>(Model.Banks.Select(a => new SelectListItem()
                                    {
                                        Text = a.BankName,
                                        Value = a.BankName

                                    }).ToList()), "", new {style = "width:100%"})
                                    <div> @Html.ValidationMessageFor(model => model.BankName, "", new {@class = "text-danger"})</div>
                                </li>

                                <li class="col-md-6">
                                    @Html.LabelFor(model => model.IBan, new {@class = ""})
                                    @Html.TextBoxFor(model => model.IBan, new {@class = "k-textbox", style = "width: 100%;"})
                                    <div>@Html.ValidationMessageFor(model => model.IBan, "", new {@class = "text-danger"})</div>
                                </li>
                            </ul>
                        </li>

                    </ul>
                </fieldset>
                //}
            }

        </div>
        <div class="mt-3">
            <p>

                <a href="@Url.Action("List")" class="k-button"><i class="fa fa-ban" style="color: lightblue"></i> Cancel</a>

                <button type="submit" class="k-button"><i class="fa fa-save" style="color: blueviolet"></i> Save</button>

            </p>
        </div>
    }


</div>


@section Scripts{
@Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $('document').ready(function () {
            $("#contentCompanionDetail").css("visibility", "visible");

            $(".loader").css("display", "none");

            $('#newCompanion button').addClass('btn btn-block mb-2 text-uppercase text-white bg-info');
            //fa fa-angle-double-down pull-left
            $('#newCompanion button i').addClass('fa fa-angle-double-down pull-left');
            $("#newCompanion").css("visibility", "visible");
            $(".loader").css("display", "none");

            $('#newCompanion button').click(function (e) {

                var $this = this;
                e.preventDefault();
                var caret = $($this).find('i');
                if ($(caret).hasClass('fa-angle-double-down'))
                    $(caret).removeClass('fa-angle-double-down').addClass("fa-angle-double-up");
                else
                    $(caret).removeClass('fa-angle-double-up').addClass("fa-angle-double-down");

            });
            $("#DateIn, #DateOut").kendoDatePicker({
                min: new Date()
            });
            $("#IBan").kendoMaskedTextBox({
                mask: "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
                promptChar: ""
                //
            });
            $("#CompanionCID").kendoMaskedTextBox({
                mask: "AAAAAAAAAAAA",
                promptChar: ""
            });
            $("#PatientCID").kendoMaskedTextBox({
                mask: "AAAAAAAAAAAA",
                promptChar: ""
            });

            var isBen = $('#IsBeneficiary');
            if (!isBen.is(":checked")) {
                $('#bankInfo').hide();
            }
            isBen.on('change', function () {
                if ($(this).is(':checked')) {
                    $('#bankInfo').show();

                } else {
                    $("#BankName").val(null);
                    $("#IBan").val(null);
                    $('#bankInfo').hide();

                }
            });

            // if there is a validation error, collapsed fields should be opened
            var True = true, False = false;
            var isvalid= @isvalid;
            var form = $('#companionForm');
            //var element1 = $('#patientDetails');
            var element2 = $('#companionInfo');
            var element3 = $('#companionBankInfo');
           // var element4 = $('#treatmentDetails');
            if (isvalid == false) {
                element3.addClass("show");
            }
            form.submit(function( event ) {
                var result = form.valid();


                if (!element2.find('select').valid()) {
                    element2.addClass("show");
                } else {
                    element2.removeClass("show");
                }
                if (!element3.find( 'select' ).valid()) {
                    element3.addClass("show");
                }else {
                    element3.removeClass("show");
                }
                //if (!element4.find( 'input' ).valid()) {
                //    element4.addClass("show");
                //}else {
                //    element4.removeClass("show");
                //}
            });
        });
    </script>
}



