@using Kwt.PatientsMgtApp.WebUI.Infrastructure
@model Kwt.PatientsMgtApp.Core.Models.PaymentModel

@{
    ViewBag.Title = "Payment Details";
}


<div class="mt-3">
    <p>
        <a href="@Url.Action("List")" class="k-button"><i class="fa fa-arrow-left" style="color: lightblue"></i> Back to List</a>
        @if (User.IsInAnyRoles(CrudRoles.PaymentUpdateRoles) || User.IsInAnyRoles(CrudRoles.PaymentApprovalRoles))
        {
            if (User.IsInAnyRoles(CrudRoles.PaymentUpdateRoles))
            {
                <a href="@Url.Action("Edit", new {paymentId=Model.Id})" class="k-button"><i class="fa fa-pencil" style="color: blueviolet"></i> Edit</a>
            }
            <a href="javascript:window.print()" class="k-button"><i class="fa fa-print" style="color: blueviolet"></i> Print This Page</a>
            <a href="javascript:showTodayPayments()" class="k-button"><i class="fa fa-eye" style="color: blueviolet"></i> Show Voucher</a>
            @*<a href="javascript:printPaymentVoucher()" class="k-button"><i class="fa fa-print" style="color: blueviolet"></i> Print Voucher</a>*@
        }

    </p>
</div>
<div class="loader"></div>
<div id="contentPaymentDetail" style="visibility:hidden;">

    <button data-toggle="collapse" data-target="#paymentDetail">
        <i></i> Payment Details
    </button>

    <fieldset id="paymentDetail" class="collapse show">
        <legend>Payment Details</legend>
        <ul class="fieldlist form-row">
            @* new 07-13-2019*@
            <li class="col-md-3">
                @Html.LabelFor(model => model.IsRejected, new { @class = "" })
                @Html.TextBoxFor(model => model.IsRejectedText, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            @*end new *@
            <li class="col-md-3">
                @Html.LabelFor(model => model.PaymentDate, new { @class = "" })
                @Html.TextBoxFor(model => model.PaymentDateFormatted, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.CompanionPayRate, new { @class = "" })
                @Html.TextBoxFor(model => model.CompanionPayRate, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.PatientPayRate, new { @class = "" })
                @Html.TextBoxFor(model => model.PatientPayRate, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.PaymentStartDate, new { @class = "" })
                @Html.TextBoxFor(model => model.PaymentStartDateFormatted, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>

            <li class="col-md-3">
                @Html.LabelFor(model => model.PaymentEndDate, new { @class = "" })
                @Html.TextBoxFor(model => model.PaymentEndDateFormatted, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.PatientCID, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.PatientCID, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.PaymentLengthPeriod, new { @class = "" })
                @Html.TextBoxFor(model => (model.PaymentLengthPeriod), new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-2">
                <div class="input-group">
                    @Html.LabelFor(model => model.PatientAmount, new { @class = "" })
                    @Html.TextBoxFor(model => model.PatientAmount, new { @class = "k-textbox input-control edit", style = "width: 100%;", @readonly = "readonly" })
                </div>
            </li>


            <li class="col-md-3">
                @Html.LabelFor(model => model.CompanionAmount, new { @class = "" })
                @Html.TextBoxFor(model => model.CompanionAmount, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.TotalDue, new { @class = "" })
                @Html.TextBoxFor(model => model.TotalDue, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-6">
                @Html.LabelFor(model => model.Notes, new { @class = "" })
                @Html.TextAreaFor(model => model.Notes, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>

        </ul>
    </fieldset>

    @if (Model.PaymentDeductions != null && Model.PaymentDeductions.Count > 0)
    {
        <button data-toggle="collapse" data-target="#paymentDeduction"><i></i> Deduction Info</button>
        <div id="paymentDeduction" class="collapse show"></div>
    }
    @if (Model.Payments != null && Model.Payments.Count > 0)
    {
        <button data-toggle="collapse" data-target="#paymentList"><i></i> Payments History</button>
        <div id="paymentList" class="collapse show"></div>
    }
    <button data-toggle="collapse" data-target="#BenfeciaryInfo"> <i></i> Beneficiary Info</button>
    <fieldset id="BenfeciaryInfo" class="collapse">
        <legend>Beneficiary Information</legend>
        <ul class="fieldlist form-row">
            <li class="col-md-3">
                @Html.LabelFor(model => model.BeneficiaryCID, new { @class = "" })
                @Html.TextBoxFor(model => model.BeneficiaryCID, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.BeneficiaryFName, new { @class = "" })
                @Html.TextBoxFor(model => model.BeneficiaryFName, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.BeneficiaryMName, new { @class = "" })
                @Html.TextBoxFor(model => model.BeneficiaryMName, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.BeneficiaryLName, new { @class = "" })
                @Html.TextBoxFor(model => model.BeneficiaryLName, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
        </ul>
    </fieldset>

    <button data-toggle="collapse" data-target="#BeneficiaryBankInfo"> <i></i> Beneficiary Bank Info</button>
    <fieldset id="BeneficiaryBankInfo" class="collapse">
        <legend>Beneficiary Bank Information</legend>
        <ul class="fieldlist form-row">
            <li class="col-md-6">
                @Html.LabelFor(model => model.BeneficiaryBank, new { @class = "" })
                @Html.TextBoxFor(model => model.BeneficiaryBank, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-6">
                @Html.LabelFor(model => model.BeneficiaryIBan, new { @class = "" })
                @Html.TextBoxFor(model => model.BeneficiaryIBan, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
        </ul>
    </fieldset>
    <button data-toggle="collapse" data-target="#patientInformation"><i></i> Patient Info</button>
    <fieldset id="patientInformation" class="collapse">
        <legend>Patient Information</legend>
        <ul class="fieldlist form-row">
            <li class="col-md-3">
                @Html.LabelFor(model => model.PatientCID, new { @class = "" })
                @Html.TextBoxFor(model => model.PatientCID, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.PatientFName, new { @class = "" })
                @Html.TextBoxFor(model => model.PatientFName, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.PatientMName, new { @class = "" })
                @Html.TextBoxFor(model => model.PatientMName, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.PatientLName, new { @class = "" })
                @Html.TextBoxFor(model => model.PatientLName, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-8">
                @Html.LabelFor(model => model.Hospital, new { @class = "" })
                @Html.TextBoxFor(model => model.Hospital, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.Agency, new { @class = "" })
                @Html.TextBoxFor(model => model.Agency, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
        </ul>
    </fieldset>
    <button data-toggle="collapse" data-target="#companionInfo"><i></i> Companion Info</button>
    <fieldset id="companionInfo" class="collapse">
        <legend>Companion Information</legend>
        @if (Model.CompanionCID != null)
        {
        <ul class="fieldlist form-row">
            <li class="col-md-3">
                @Html.LabelFor(model => model.CompanionCID, new { @class = "" })
                @Html.TextBoxFor(model => model.CompanionCID, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.CompanionFName, new { @class = "" })
                @Html.TextBoxFor(model => model.CompanionFName, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.CompanionMName, new { @class = "" })
                @Html.TextBoxFor(model => model.CompanionMName, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.CompanionLName, new { @class = "" })
                @Html.TextBoxFor(model => model.CompanionLName, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>

        </ul>
        }
        else
        {

        <span>No active companion found in our records for this patient</span>


        }

    </fieldset>
    <button data-toggle="collapse" data-target="#AuditInfo"><i></i> Audit Info</button>
    <fieldset id="AuditInfo" class="collapse">
        <legend>Audit Info</legend>
        <ul class="fieldlist form-row">
            <li class="col-md-3">
                @Html.LabelFor(model => model.CreatedBy, new { @class = "" })
                @Html.TextBoxFor(model => model.CreatedBy, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.CreatedDate, new { @class = "" })
                @Html.TextBoxFor(model => model.CreatedDateFormatted, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.ModifiedBy, new { @class = "" })
                @Html.TextBoxFor(model => model.ModifiedBy, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
            <li class="col-md-3">
                @Html.LabelFor(model => model.ModifiedDate, new { @class = "" })
                @Html.TextBoxFor(model => model.ModifiedDateFormatted, new { @class = "k-textbox edit", style = "width: 100%;", @readonly = "readonly" })
            </li>
        </ul>
    </fieldset>

</div>
@* new 8/5/2019 print voucher *@
<div class="modal fade bd-example-modal-lg" id="voucherPrint" tabindex="-1" role="dialog" aria-labelledby="deleteLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                @*<h4 class="modal-title" id="deleteLabel">
                        Voucher @Model.PaymentID
                    </h4>*@
                <button type="button" class="btn btn-default" data-dismiss="modal" id="printVoucher"><i class="fa fa-print" style="color: blueviolet"></i> Print Voucher</button>
                <button type="button" class="btn btn-default" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="voucherPrintBody" style="font-size: 22px;">
                <fieldset>
                    <legend>Voucher Info</legend>
                    <ul class="fieldlist form-row">
                        <li>
                            <label>Printed By</label>
                            @User.Identity.Name
                        </li>
                        <li>
                            <label>Printed Date</label>
                            @DateTime.Now
                        </li>
                    </ul>
                </fieldset>
                <fieldset>
                    <legend>Patient Info</legend>
                    <ul class="fieldlist form-row">
                        <li class="col-md-6">
                            <label>Patient CID</label>
                            @Model.PatientCID
                        </li>
                        <li class="col-md-6">
                            <label>Patient Name</label>
                            @Model.PatientFullName
                        </li>
                    </ul>
                </fieldset>

                <fieldset>
                    <legend>Companion Info</legend>
                    @if (Model.HasCompanion == true)
                    {
                    <ul class="fieldlist form-row">
                        <li class="col-md-6">
                            <label>Companion CID</label>
                            @Model.CompanionCID
                        </li>
                        <li class="col-md-6">
                            <label>Companion Name</label>
                            @Model.CompanionFullName
                        </li>
                    </ul>
                    }
                    else
                    {
                    <ul class="fieldlist form-row">
                        <li class="col-md-6">
                            <label>No Primary Companion with this patient</label>
                        </li>
                    </ul>
                    }
                </fieldset>


                <fieldset>
                    <legend>Payment Info</legend>
                    <div class="fieldlist">
                        <div class="row">
                            <div class="col-md-4"><label>Payment Date</label> @Model.PaymentDateFormatted</div>
                            <div class="col-md-4"><label>Start Date</label> @Model.PaymentStartDateFormatted</div>
                            <div class="col-md-4"><label>End Date</label> @Model.PaymentEndDateFormatted</div>
                        </div>

                        <div class="row">
                            <div class="col-md-4"><label>Payment Period</label> @Model.PaymentLengthPeriod Day(s)</div>
                            <div class="col-md-4"><label>Patient Amount</label> @Model.PatientAmount KWD</div>
                            <div class="col-md-4"><label>Companion Amount</label> @Model.CompanionAmount KWD</div>
                        </div>

                        <div class="row">
                            <div class="col-md-4"><label>Initial Amount</label> @Model.TotalDue KWD</div>
                            @if (Model.PaymentDeductionObject != null)
                            {
                            <div class="col-md-4">
                                <label>Total Deduction</label>
                                @if (@Model.PaymentDeductionObject.TotalDeduction != null)
                                    {
                                    @Model.PaymentDeductionObject.TotalDeduction
                                    <text> KWD</text>
                                    }
                                    else
                                    {
                                    <text>0 KWD</text>
                                    }
                            </div>
                            }
                            <div class="col-md-4">
                                <label>Final Amount</label>
                                @if (@Model.FinalAmount != null)
                                {
                                @Model.FinalAmount
                                <text> KWD</text>
                                }
                                else
                                {
                                @Model.TotalDue<text> KWD</text>
                                }
                            </div>
                        </div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend>Beneficiary Info</legend>
                    <ul class="fieldlist form-row">
                        <li class="col-md-6"><label>Beneficiary Cid</label> @Model.BeneficiaryCID</li>
                        <li class="col-md-6"><label>Beneficiary Name</label> @Model.BeneficiaryFullName</li>
                        <li class="col-md-6"><label>Bank Name</label> @Model.BeneficiaryBank</li>
                        <li class="col-md-6"><label>IBan</label> @Model.BeneficiaryIBan</li>
                    </ul>
                </fieldset>
                <fieldset>
                    <legend>Notes</legend>
                    <ul class="fieldlist form-row">
                        @if (Model.PaymentDeductionNotes != null)
                        {
                            <li class="col-md-6"><label>Deduction Note</label> @Model.PaymentDeductionNotes</li>
                        }
                        else
                        {
                            <li class="col-md-6"><label>Payment Note</label> @Model.Notes</li>
                        }                        
                    </ul>
                </fieldset>
                <fieldset>
                    <legend> Payment History</legend>

                    <div id="paymentListVoucherModel"></div>
                </fieldset>
                @*<div class="pb-3">
                        <div style="text-align: right;padding-right:20px;">
                            <div class="pull-right" style="width: 230px; text-align: center;"><i>المحاسب</i></div>
                            <div class="pull-right" style="width: 286px; text-align: center;"><i>المدقق</i></div>
                            <div class="pull-left" style="width: 230px; text-align: center;"><i>الملحق المالي</i></div>
                            <div class="pull-left" style="width: 100px;"><i>رئيس المكتب</i></div>
                        </div>
                    </div>*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" id="printVoucher1"> <i class="fa fa-print" style="color: blueviolet"></i> Print Voucher</button>
            </div>
        </div>
    </div>
</div>
@* end new 8/5/2019 print voucher *@
@section Scripts{
    <script type="text/javascript">
        var paymentDeductions = @Html.Raw(Json.Encode(Model.PaymentDeductions));
        var payments = @Html.Raw(Json.Encode(Model.Payments));
        var voucherId = @Html.Raw(Json.Encode(Model.PaymentID));
        var paymentVoucherHistory= payments.filter(function(payment) {
            return payment.PaymentID != voucherId;
        });
        console.log(payments);
        $('document').ready(function() {
            //class="btn btn-block mb-2 text-uppercase text-info"
            $('#contentPaymentDetail button').addClass('btn btn-block mb-2 text-uppercase text-white bg-info');
            //fa fa-angle-double-down pull-left
            $('#contentPaymentDetail button i').addClass('fa fa-angle-double-down pull-left');
            $("#contentPaymentDetail").css("visibility", "visible");
            $(".loader").css("display", "none");

            $('#contentPaymentDetail button').click(function() {

                var $this = this;
                var caret = $($this).find('i');
                if ($(caret).hasClass('fa-angle-double-down'))
                    $(caret).removeClass('fa-angle-double-down').addClass("fa-angle-double-up");
                else
                    $(caret).removeClass('fa-angle-double-up').addClass("fa-angle-double-down");

            });
        });
        $("#paymentDeduction").kendoGrid({
            //toolbar: ["pdf"],
            //pdf: {
            //    fileName: "Deduction List.pdf"
            //},
            resizable: true,
            noRecords: true,
            messages: {
                noRecords: "There is no payments deduction to display"
            },
            columns: [
                @*{
                field: "DeductionID",
                title: "Payment Num",

                template: "<a href='@Url.Action("Details", "Payment")?paymentId=#= DeductionID#'>#= DeductionID #</a>",

            },*@

                {
                    field: "PatientCID",
                    title: "P_CID"
                },
                {
                    field: "CompanionCID",
                    title: "C_CID"
                },
                {
                    field: "PatientStartDateFormatted",
                    title: "Patient Dates",
                    template: "#= PatientStartDateFormatted # | #= PatientEndDateFormatted#"
                },
                {
                    field: "CompanionStartDateFormatted",
                    title: "Companion Dates",
                    template: "#= CompanionStartDateFormatted # | #= CompanionEndDateFormatted#"
                },
                {
                    field: "PatientDeduction",
                    title: "Patient Deduction"

                },
                {
                    field: "CompanionDeduction",
                    title: "Companion Deduction"
                },
                {
                    field: "AmountPaid",
                    title: "Amount"
                },
                {
                    field: "TotalDeduction",
                    title: "Total Deduction"
                },
                {
                    field: "FinalAmount",
                    title: "Final Amount"
                }
            ],
            dataSource: {
                data: paymentDeductions
            }
        });

        $("#paymentList").kendoGrid({
            resizable: true,
            noRecords: true,
            messages: {
                noRecords: "There is no payments to display"
            },
            sortable: {
                mode: "single",
                allowUnsort: false
            },
            autoFitColumn: true,
            dataBound: function() {
                for (var i = 0; i < this.columns.length; i++) {
                    this.autoFitColumn(i);
                }
            },
            columns: [
                {
                    field: "PaymentID",
                    title: "Voucher#"
                }, {
                    field: "PatientCID",
                    title: "P_CID"
                },
                {
                    field: "CompanionCID",
                    title: "C_CID"
                },
                {
                    field: "BeneficiaryCID",
                    title: "Beneficiary CID",
                },
                {
                    field: "PaymentDateFormatted",
                    title: "Payment Date",
                },
                {
                    field: "PaymentStartDateFormatted",
                    title: "Start Date",
                },
                {
                    field: "PaymentEndDateFormatted",
                    title: "End Date",
                },
                {
                    field: "BeneficiaryIBan",
                    title: "IBan"

                },
                {
                    field: "TotalDeduction",
                    title: "Total Deduction"
                },
                {
                    field: "FinalAmount",
                    title: "Final Amount"
                },
                {
                    field: "Notes",
                    title: "Payment Notes"
                },
                {
                    field: "PaymentDeductionNotes",
                    title: "Deduction Notes"
                }
            ],
            dataSource: {
                data: paymentVoucherHistory
            }
        });

    </script>


    @* new 8/5/2019 print Voucher scrip *@
    <script type="text/javascript">

        //function printPayment() {
        //    var grid = $("#paymentGrid").data("kendoGrid");
        //    grid.saveAsExcel();
        //    console.log("Print excel payment");
        //}
        var voucherId = @Html.Raw(Json.Encode(Model.PaymentID));
        @*var paymentVoucherHistory= payments.filter(function(payment) {
            return payment.PaymentID != voucherId;
        });*@
        function printPaymentVoucher(voucherId) {
            var divContents = $("#voucherPrintBody").html();
            //console.log("$('#voucherPrintBody').html() ",divContents);
            $('#voucherPrintBody').printThis({
                //importCSS: false,
                //loadCSS: "./Content/VoucherPrintStyle.css",
                header: "<h1>KWT Voucher "+voucherId+" Details</h1>",
                footer:'<div style="text-align: right; padding-right:90px;">' +
                       '<div class="pull-right" style="width: 230px;"><i>المحاسب</i></div>'
                      +'<div class="pull-right" style="width: 286px; text-align: center;"><i>المدقق</i></div>'
                      +'<div class="pull-left" style="width: 230px; text-align: center;"><i>الملحق المالي</i></div>'
                //+'<div class="pull-right" style="width: 100px;"><i>رئيس المكتب</i></div></div>'
                // debug: true,
            });
        }
        function showTodayPayments() {
            $('#voucherPrint').modal('show');
            $('#printVoucher, #printVoucher1').click(function() {
                printPaymentVoucher(voucherId);
            });
        }

        $("#paymentListVoucherModel").kendoGrid({
            resizable: true,
            noRecords: true,
            messages: {
                noRecords: "There is no payments to display"
            },
            columns: [
            {
                field: "Id",
                title: "Voucher#",
                width: "50px"
            },
                {
                    field: "PaymentDateFormatted",
                    title: "Pay Date",
                    width: "50px"
                },
                {
                    field: "PaymentStartDateFormatted",
                    title: "Start Date",
                    width: "50px"
                },
                {
                    field: "PaymentEndDateFormatted",
                    title: "End Date",
                    width: "50px"
                },
                {
                    field: "BeneficiaryIBan",
                    title: "IBan",
                    width: "160px"
                },
                {
                    field: "TotalDeduction",
                    title: "Deduction",
                    width: "50px"
                },
                {
                    field: "FinalAmount",
                    title: "Amount",
                    width: "50px",
                    template: "#if (IsRejected==true){#R: <i style='color:red;'>(-#:FinalAmount# )</i>#}else {# #: FinalAmount # #}#"
                },
                //{
                //    field: "Notes",
                //    title: "Notes",
                //    width: "150px",
                //    template: "#if = CompanionStartDateFormatted # | #= CompanionEndDateFormatted#"
                //},
                {
                    field: "PaymentDeductionNotes",
                    title: "Notes",
                    width: "140px",
                    template: "#if (PaymentDeductionNotes){# #: PaymentDeductionNotes # #}else if (Notes) {# #: Notes # #}#"
                }
            ],
            dataSource: {
                data: paymentVoucherHistory.slice(0, 3)
            }
        });

    </script>
}
