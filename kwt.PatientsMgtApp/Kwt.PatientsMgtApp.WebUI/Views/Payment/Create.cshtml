@model Kwt.PatientsMgtApp.Core.Models.PaymentModel

@{
    ViewBag.Title = "New Payment";
}
<hr/>

@using (Html.BeginForm("Create", "Payment", FormMethod.Get))
{
    
    @Html.TextBox("patientCid",null, new {placeholder="Enter Patient CID",id= "patientCid", @class = "form-control col-md-2" })
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PaymentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PaymentDate,  new { @class = "form-control datepicker" } )
                @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PatientCID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PatientCID, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.PatientCID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PatientFName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PatientFName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PatientFName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PatientMName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PatientMName,  new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.PatientMName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PatientLName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PatientLName,  new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.PatientLName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanionCID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CompanionCID,  new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.CompanionCID, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.CompanionCID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanionFName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CompanionFName,  new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.CompanionFName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanionMName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CompanionMName,  new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.CompanionMName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanionLName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CompanionLName,  new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanionLName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryCID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.BeneficiaryCID,  new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.BeneficiaryCID, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.BeneficiaryCID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryFName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.BeneficiaryFName,  new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.BeneficiaryFName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryMName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.BeneficiaryMName,  new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.BeneficiaryMName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryLName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.BeneficiaryLName,  new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BeneficiaryLName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryBank, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.BeneficiaryBank, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BeneficiaryBank, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryIBan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.BeneficiaryIBan,  new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.BeneficiaryIBan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hospital, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Hospital,  new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.Hospital, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Hospital)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Agency, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Agency,  new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.Agency, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Agency)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanionPayRate,  new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.PayRates != null && !String.IsNullOrEmpty(Model.CompanionCID))
                {
                    @Html.DropDownListFor(model => model.CompanionPayRate, new List<SelectListItem>
                        (Model.PayRates.Select(a => new SelectListItem()
                        {
                            Text = a.CompanionRate.ToString(),
                            Value = a.CompanionRate.ToString()

                        }).ToList()))
                }
                else if (String.IsNullOrEmpty(Model.CompanionCID))
                {

                    @Html.DisplayFor(model => model.CompanionPayRate, new {htmlAttributes = new {@class = "form-control"}})
                }
                else
                {
                    @Html.TextBoxFor(model => model.CompanionPayRate, new { htmlAttributes = new { @class = "form-control" } })

                }
                @Html.ValidationMessageFor(model => model.CompanionPayRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PatientPayRate,  new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PatientPayRate,new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.PatientPayRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentStartDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                 @Html.TextBoxFor(model => model.PaymentStartDate, new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.PaymentStartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentEndDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PaymentEndDate, new { @class = "form-control datepicker"  })
                @Html.ValidationMessageFor(model => model.PaymentEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentLengthPeriod,  new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PaymentLengthPeriod,  new { @class = "form-control", @readonly = "readonly"  })
                @Html.ValidationMessageFor(model => model.PaymentLengthPeriod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PatientAmount, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PatientAmount, new { @class = "form-control", @readonly = "readonly"  })
                @Html.ValidationMessageFor(model => model.PatientAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanionAmount,  new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CompanionAmount,  new { @class = "form-control", @readonly = "readonly"  })
                @Html.ValidationMessageFor(model => model.CompanionAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalDue,  new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.TotalDue,  new { @class = "form-control", @readonly = "readonly"  })
                @Html.ValidationMessageFor(model => model.TotalDue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes,  new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Notes,  new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                </div>
            </div>*@
        
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        
        
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        
        $('#CompanionPayRate, #PatientPayRate, #PaymentStartDate, #PaymentEndDate').change(function () {
            
            $("#PatientPayRate").val();
            var days = new Date(new Date($("#PaymentStartDate").val()) -
                                new Date($("#PaymentEndDate").val()));
            days = days / (1000 * 60 * 60 * 24);
            console.log($("#PaymentEndDate").val());
            console.log($("#PaymentStartDate").val());

            if ($("#PaymentEndDate").val() && $("#PaymentStartDate").val() && days) {
                if (days < 0) {
                    days = days * -1;
                }
                
                $("#PaymentLengthPeriod").val(Math.round(days));
                var companionRate = $("#CompanionPayRate").val() * $("#PaymentLengthPeriod").val();
                var patientRate = $("#PatientPayRate").val() * $("#PaymentLengthPeriod").val();
                var companionAmount = 0;
                var patientAmount = 0;
                if (companionRate) {
                    $("#CompanionAmount").val(companionRate);
                    companionAmount = $("#CompanionAmount").val();
                }
                if (companionRate) {
                    
                }
                $("#PatientAmount").val(patientRate);
                
                    patientAmount = $("#PatientAmount").val();
                
                $("#TotalDue").val(parseInt(patientAmount)+parseInt(companionAmount));
                

            } else {
                $("#PaymentLengthPeriod").val("");
                $("#PatientAmount").val(0.00);
                $("#CompanionAmount").val(0.00);
                $("#TotalDue").val(0.00);
            }

        });


    </script>
}
