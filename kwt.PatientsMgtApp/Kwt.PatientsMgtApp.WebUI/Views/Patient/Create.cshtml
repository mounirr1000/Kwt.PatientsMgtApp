@model Kwt.PatientsMgtApp.Core.Models.PatientModel

@{
    ViewBag.Title = "Create New Patient";
    var isvalid = ViewBag.IsValid as Boolean? ?? true;
}


@using (Html.BeginForm("Create", "Patient", FormMethod.Post, new { @class = ".k-form", id = "patientForm" }))
{
    <div class="mt-3">
        <p>
            <a href="@Url.Action("List")" class="k-button"><i class="fa fa-arrow-left" style="color: lightblue"></i> Back to List</a>
            <button type="submit" class="k-button"><i class="fa fa-save" style="color: blueviolet"></i> Save</button>
        </p>
    </div>


    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(false, "", new { @class = "k-error-colored ml-3" })
        <div id="newPatient" style="visibility:hidden;">
            <button data-target="#patientDetails" data-toggle="collapse"><i></i> Patient Details</button>
            <fieldset id="patientDetails" class="collapse show">
                <legend></legend>
                <ul class="fieldlist row">
                    <li class="editor-field col-md-4">
                        <small class="text-sm-left text-info">Please Type CID, You can't copy paste</small>
                        @Html.LabelFor(model => model.PatientCID, new { @class = "" })
                        @Html.TextBoxFor(model => model.PatientCID, new { @class = "k-textbox", style = "width: 100%;", maxlength = "12" })
                        <div>
                            @Html.ValidationMessageFor(model => model.PatientCID, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                    <li class="col-md-4">
                        <small class="text-sm-left text-info">&nbsp;</small>
                        @Html.LabelFor(model => model.PatientFName, new { @class = "" })
                        @Html.TextBoxFor(model => model.PatientFName, new { @class = "k-textbox", style = "width: 100%;" })
                        <div>
                            @Html.ValidationMessageFor(model => model.PatientFName, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                    <li class="col-md-4">
                        <small class="text-sm-left text-info">&nbsp;</small>
                        @Html.LabelFor(model => model.PatientMName, new { @class = "" })
                        @Html.TextBoxFor(model => model.PatientMName, new { @class = "k-textbox", style = "width: 100%;" })
                        <div>
                            @Html.ValidationMessageFor(model => model.PatientMName, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                    <li class="col-md-4">
                        @Html.LabelFor(model => model.PatientLName, new { @class = "" })
                        @Html.TextBoxFor(model => model.PatientLName, new { @class = "k-textbox", style = "width: 100%;" })
                        <div>
                            @Html.ValidationMessageFor(model => model.PatientLName, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                    <li class="col-md-4">
                        @Html.LabelFor(model => model.KWTPhone, new { @class = "" })
                        @Html.TextBoxFor(model => model.KWTPhone, new { @class = "k-textbox", style = "width: 100%;" })
                        <div>
                            @Html.ValidationMessageFor(model => model.KWTPhone, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                    <li class="col-md-4">
                        @Html.LabelFor(model => model.USPhone, htmlAttributes: new { @class = "" })
                        @Html.TextBoxFor(model => model.USPhone, new { @class = "k-textbox", style = "width: 100%;" })
                        <div>
                            @Html.ValidationMessageFor(model => model.USPhone, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                    <li class="col-md-4">
                        @Html.LabelFor(model => model.Agency, new { @class = "" })
                        @Html.DropDownListFor(model => model.Agency, new List<SelectListItem>(Model.Agencies.Select(a => new SelectListItem()
                   {
                       Text = a.AgencyName,
                       Value = a.AgencyName
                   }).ToList()), "Select Agency...", new { style = "width:50%" })
                        <div>
                            @Html.ValidationMessageFor(model => model.Agency, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                    <li class="col-md-4">
                        @Html.LabelFor(model => model.HasCompanion, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.HasCompanion, new { @class = "", style = "width: 100%;", title = "Text to show" })
                        <div>
                            @Html.ValidationMessageFor(model => model.HasCompanion, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                </ul>
            </fieldset>
            <button data-target="#dignosisDetails" data-toggle="collapse"><i></i> Dignosis Details</button>
            <fieldset id="dignosisDetails" class="collapse">
                <legend></legend>
                <ul class="fieldlist row">
                    <li class="col-sm-8">
                        @Html.LabelFor(model => model.Hospital, new { @class = "" })
                        @Html.DropDownListFor(model => model.Hospital, new List<SelectListItem>(Model.Hospitals.Select(a => new SelectListItem()
                   {
                       Text = a.HospitalName,
                       Value = a.HospitalName
                   }).ToList()), "Select Hospital Name...", new { style = "width:90%" })
                        <div>
                            @Html.ValidationMessageFor(model => model.Hospital, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                    <li class="col-sm-8">
                        @Html.LabelFor(model => model.Specialty, new { @class = "" })
                        @Html.DropDownListFor(model => model.Specialty, new List<SelectListItem>(Model.Sepcialities.Select(a => new SelectListItem()
                   {
                       Text = a.Speciality,
                       Value = a.Speciality
                   }).ToList()), "Select Specialty...", new { style = "width:50%" })
                        <div>
                            @Html.ValidationMessageFor(model => model.Specialty, "", new { @class = "k-error-colored" })
                        </div>
                    </li>

                    <li class="col-sm-8">
                        @Html.LabelFor(model => model.Doctor, new { @class = "" })
                        @Html.DropDownListFor(model => model.Doctor, new List<SelectListItem>(Model.Doctors.Select(a => new SelectListItem()
                   {
                       Text = a.DoctorName,
                       Value = a.DoctorName

                   }).ToList()), "Select Doctor Name...", new { style = "width:50%" })
                        <div>
                            @Html.ValidationMessageFor(model => model.Doctor, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                    <li class="col-md-6">
                        @Html.LabelFor(model => model.Diagnosis, new { @class = "" })
                        @Html.TextAreaFor(model => model.Diagnosis, new { @class = "k-editor-textarea", style = "width: 100%;", maxlength = "250" })
                        <div>
                            @Html.ValidationMessageFor(model => model.Diagnosis, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                </ul>
            </fieldset>

            <button data-target="#bankDetails" data-toggle="collapse"><i></i> Bank Details</button>
            <fieldset id="bankDetails" class="collapse">
                <legend></legend>
                <ul class="fieldlist row">
                    <li class="col-md-2">
                        @Html.LabelFor(model => model.IsBeneficiary, new { @class = "k-checkbox-label" })
                        @Html.EditorFor(model => model.IsBeneficiary, new { @class = "k-checkbox" })
                        @Html.ValidationMessageFor(model => model.IsBeneficiary, "", new { @class = "text-danger" })
                    </li>
                </ul>
                <ul class="fieldlist row" id="bankDetailInfo">
                    <li class="col-md-6 pt-2">
                        @Html.LabelFor(model => model.BankName, new { @class = "" })
                        @Html.DropDownListFor(model => model.BankName, new List<SelectListItem>(Model.Banks.Select(a => new SelectListItem()
                   {
                       Text = a.BankName,
                       Value = a.BankName
                   }).ToList()), "", new { style = "width:60%" })
                        @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                    </li>
                    <li class="col-md-6 pt-2">
                        @Html.LabelFor(model => model.Iban, new { @class = "" })
                        @Html.TextBoxFor(model => model.Iban, new { @class = "k-textbox", style = "width:100%", maxlength = "30" })
                        @Html.ValidationMessageFor(model => model.Iban, "", new { @class = "text-danger" })
                    </li>
                </ul>
                @*<ul class="fieldlist row">
                        <li class="col-md-4">
                            @Html.LabelFor(model => model.IsBeneficiary, new { @class = "k-checkbox-label" })
                            @Html.EditorFor(model => model.IsBeneficiary, new { @class = "k-checkbox" })
                            <div>
                                @Html.ValidationMessageFor(model => model.IsBeneficiary, "", new { @class = "k-error-colored" })
                            </div>
                        </li>
                        <li class="col-md-4">
                            @Html.LabelFor(model => model.BankName, new { @class = "" })
                            @Html.DropDownListFor(model => model.BankName, new List<SelectListItem>(Model.Banks.Select(a => new SelectListItem()
                       {
                           Text = a.BankName,
                           Value = a.BankName
                       }).ToList()), "Select Bank Name...", new { style = "width:100%" })
                            <div>
                                @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "k-error-colored" })
                            </div>
                        </li>
                        <li class="col-md-4">
                            @Html.LabelFor(model => model.Iban, new { @class = "" })
                            @Html.TextBoxFor(model => model.Iban, new { @class = "k-textbox", style = "width:100%" })
                            <div>
                                @Html.ValidationMessageFor(model => model.Iban, "", new { @class = "k-error-colored" })
                            </div>
                        </li>
                    </ul>*@
            </fieldset>

            <button data-target="#treatmentDetails" data-toggle="collapse"><i></i> Treatment Details</button>
            <fieldset id="treatmentDetails" class="collapse">
                <legend></legend>
                <ul class="fieldlist row">
                    <li class="col-md-3">
                        @Html.LabelFor(model => model.FirstApptDAte, new { @class = "" })
                        @Html.TextBoxFor(model => model.FirstApptDAte, "{0:MM/dd/yyyy}", new { @class = "", style = "width: 60%" })
                        <div>
                            @Html.ValidationMessageFor(model => model.FirstApptDAte, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                    <li class="col-md-3">
                        @Html.LabelFor(model => model.EndTreatDate, new { @class = "" })
                        @Html.TextBoxFor(model => model.EndTreatDate, "{0:MM/dd/yyyy}", new { @class = "", style = "width: 60%" })
                        <div>
                            @Html.ValidationMessageFor(model => model.EndTreatDate, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                    <li class="col-md-3">
                        @Html.LabelFor(model => model.AuthorizedDate, new { @class = "" })
                        @Html.TextBoxFor(model => model.AuthorizedDate, "{0:MM/dd/yyyy}", new { @class = "", style = "width: 60%" })
                        <div>
                            @Html.ValidationMessageFor(model => model.AuthorizedDate, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                    <li class="col-md-2">
                        @Html.LabelFor(model => model.IsActive, new { @class = "" })
                        @Html.EditorFor(model => model.IsActive, new { @class = "form-control", style = "width: 100%" })
                        <div>
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                    <li class="col-md-8">
                        @Html.LabelFor(model => model.Notes, new { @class = "" })
                        @Html.TextAreaFor(model => model.Notes, new { @class = "k-editor-textarea", maxlength = "250", style = "width: 100%" })
                        <div>
                            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "k-error-colored" })
                        </div>
                    </li>
                </ul>
            </fieldset>
        </div>
        <div class="mt-3">
            <p>
                <a href="@Url.Action("List")" class="k-button"><i class="fa fa-arrow-left" style="color: lightblue"></i> Back to List</a>
                <button type="submit" class="k-button"><i class="fa fa-save" style="color: blueviolet"></i> Save</button>
            </p>
        </div>

    </div>
}



@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">


        $("#FirstApptDAte, #EndTreatDate, #AuthorizedDate").kendoDatePicker({

        });
        $.validator.setDefaults({ ignore: '' });
        $(document).ready(function () {

            $("#Hospital, #Agency, #Specialty, #Doctor").kendoDropDownList();

            $("#KWTPhone").kendoMaskedTextBox({
                mask: "96500000000"
            });
            $("#PatientCID").kendoMaskedTextBox({
                mask: "AAAAAAAAAAAA",
                promptChar: "",
                //clearPromptChar: true
            });
            $("#PatientCID").bind('cut copy paste', function (e) {

                e.preventDefault();

            });
            $("#USPhone").kendoMaskedTextBox({
                mask: "0000000000"
            });
            $("#Iban").kendoMaskedTextBox({
                mask: "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
                promptChar: ""
            });

            $("#newPatient").css("visibility", "visible");
            $('#newPatient button').addClass('btn btn-block mb-2 text-uppercase text-white bg-info');
            $('#newPatient button i').addClass('fa fa-angle-double-down pull-left');
            $('#newPatient button').click(function (e) {
                e.preventDefault();
                var $this = this;
                var caret = $($this).find('i');
                if ($(caret).hasClass('fa-angle-double-down'))
                    $(caret).removeClass('fa-angle-double-down').addClass("fa-angle-double-up");
                else
                    $(caret).removeClass('fa-angle-double-up').addClass("fa-angle-double-down");
            });


            var isBen = $('#IsBeneficiary');
            if (!isBen.is(":checked")) {
                $('#bankDetailInfo').hide();
            }
            isBen.on('change', function () {
                if ($(this).is(':checked')) {
                    $('#bankDetailInfo').show();

                } else {
                    $("#BankName").val(null);
                    $("#IBan").val(null);
                    $('#bankDetailInfo').hide();

                }
            });
            // if there is a validation error, collapsed fields should be opened
            var True = true, False = false;
            var isvalid= @isvalid;
            var form = $('#patientForm');
            //var element1 = $('#patientDetails');
            var element2 = $('#dignosisDetails');
            var element3 = $('#bankDetails');
            var element4 = $('#treatmentDetails');
            if (isvalid == false) {
                element3.addClass("show");
            }
            form.submit(function( event ) {
                var result = form.valid();


                if (!element2.find('select').valid()) {
                    element2.addClass("show");
                } else {
                    element2.removeClass("show");
                }
                if (!element3.find( 'select' ).valid()) {
                    element3.addClass("show");
                }else {
                    element3.removeClass("show");
                }if (!element4.find( 'input' ).valid()) {
                    element4.addClass("show");
                }else {
                    element4.removeClass("show");
                }
            });
            $(".loader").css("display", "none");
        });
    </script>


}
