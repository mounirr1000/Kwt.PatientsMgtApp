
@model Kwt.PatientsMgtApp.Core.Models.PatientModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Patient Information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.PatientCID, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.PatientCID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PatientCID, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.PatientFName, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.PatientFName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PatientFName, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.PatientMName, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.PatientMName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PatientMName, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.PatientLName, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.PatientLName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PatientLName, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.KWTPhone, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.KWTPhone, new { htmlAttributes = new { @class = "form-control", type = "tel" } })
                    @Html.ValidationMessageFor(model => model.KWTPhone, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.USPhone, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.USPhone, new { htmlAttributes = new { @class = "form-control", type = "tel" } })
                    @Html.ValidationMessageFor(model => model.USPhone, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Hospital, htmlAttributes: new { @class = "control-label" })

                    @*@Html.EditorFor(model => model.Patient.Hospital, new { htmlAttributes = new { @class = "form-control" } })*@

                    @Html.DropDownListFor(model => model.Hospital, new List<SelectListItem>(Model.Hospitals.Select(a => new SelectListItem()
                   {
                       Text = a.HospitalName,
                       Value = a.HospitalName

                   }).ToList()), "")
                    @Html.ValidationMessageFor(model => model.Hospital, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Doctor, htmlAttributes: new { @class = "control-label" })

                    @*@Html.EditorFor(model => model.Patient.Doctor, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.Doctor, new List<SelectListItem>(Model.Doctors.Select(a => new SelectListItem()
                   {
                       Text = a.DoctorName,
                       Value = a.DoctorName

                   }).ToList()), "")
                    @Html.ValidationMessageFor(model => model.Doctor, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Specialty, htmlAttributes: new { @class = "control-label" })

                    @*@Html.EditorFor(model => model.Patient.Doctor, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.Specialty, new List<SelectListItem>(Model.Sepcialities.Select(a => new SelectListItem()
               {
                   Text = a.Speciality,
                   Value = a.Speciality

               }).ToList()), "")
                    @Html.ValidationMessageFor(model => model.Specialty, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Diagnosis, htmlAttributes: new { @class = "control-label" })

                    @*@Html.EditorFor(model => model.Patient.Doctor, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.EditorFor(model => model.Diagnosis, new { htmlAttributes = new { @class = "form-control", type = "tel" } })
                    @Html.ValidationMessageFor(model => model.Diagnosis, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Agency, htmlAttributes: new { @class = "control-label" })

                    @*@Html.EditorFor(model => model.Patient.Agency, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.Agency, new List<SelectListItem>(Model.Agencies.Select(a => new SelectListItem()
                   {
                       Text = a.AgencyName,
                       Value = a.AgencyName

                   }).ToList()), "")
                    @Html.ValidationMessageFor(model => model.Agency, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label" })

                    @*@Html.EditorFor(model => model.Patient.BankName, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.BankName, new List<SelectListItem>(Model.Banks.Select(a => new SelectListItem()
                   {
                       Text = a.BankName,
                       Value = a.BankName

                   }).ToList()), "")
                    @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })

                </div>
            </div>

            @*<div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.BankCode, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">

                            @Html.DropDownListFor(model => model.BankCode, new List<SelectListItem>(Model.Banks.Select(a => new SelectListItem()
                       {
                           Text = a.BankCode,
                           Value = a.BankCode

                       }).ToList()), "")
                            @Html.ValidationMessageFor(model => model.BankCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@

            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Iban, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Iban, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Iban, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstApptDAte, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.FirstApptDAte, new { htmlAttributes = new { @class = "form-control", type = "Date" } })
                    @Html.ValidationMessageFor(model => model.FirstApptDAte, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.EndTreatDate, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.EndTreatDate, new { htmlAttributes = new { @class = "form-control", type = "Date" } })
                    @Html.ValidationMessageFor(model => model.EndTreatDate, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.IsBeneficiary, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.IsBeneficiary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsBeneficiary, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })

                    @Html.TextAreaFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", rows = "5" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
