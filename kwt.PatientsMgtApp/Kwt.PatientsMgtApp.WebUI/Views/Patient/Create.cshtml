@model Kwt.PatientsMgtApp.Core.Models.PatientModel

@{
    ViewBag.Title = "Create New Patient";
}


@using (Html.BeginForm("Create", "Patient", FormMethod.Post, new { @class = ".k-form", id = "patientForm" }))
{

    <div class="mt-3">
        <p>
            @*<input type="submit" value="Save" class="k-button m-3"/>*@
            <a href="@Url.Action("List")" class="k-button"><i class="fa fa-arrow-left" style="color: lightblue"></i> Back to List</a>
            @*@Html.ActionLink("Back to List", "Index", null, new {@class = "k-button m-3"})*@
            <button type="submit" class="k-button"><i class="fa fa-save" style="color: blueviolet"></i> Save</button>
        </p>
    </div>


    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "k-error-colored ml-3" })
        <fieldset>
            <legend>Patient Details</legend>
            <ul class="fieldlist">
                <li class="editor-field">

                    @Html.LabelFor(model => model.PatientCID, new { @class = "" })

                    @Html.TextBoxFor(model => model.PatientCID, new { @class = "k-textbox", style = "width: 100%;" })
                    <div>
                        @Html.ValidationMessageFor(model => model.PatientCID, "", new { @class = "k-error-colored" })
                    </div>
                </li>
                <li>

                    @Html.LabelFor(model => model.PatientFName, new { @class = "" })

                    @Html.TextBoxFor(model => model.PatientFName, new { @class = "k-textbox", style = "width: 100%;" })
                    <div>
                        @Html.ValidationMessageFor(model => model.PatientFName, "", new { @class = "k-error-colored" })
                    </div>

                </li>
                <li>

                    @Html.LabelFor(model => model.PatientMName, new { @class = "" })

                    @Html.TextBoxFor(model => model.PatientMName, new { @class = "k-textbox", style = "width: 100%;" })
                    <div>
                        @Html.ValidationMessageFor(model => model.PatientMName, "", new { @class = "k-error-colored" })
                    </div>


                </li>
                <li>

                    @Html.LabelFor(model => model.PatientLName, new { @class = "" })

                    @Html.TextBoxFor(model => model.PatientLName, new { @class = "k-textbox", style = "width: 100%;" })
                    <div>
                        @Html.ValidationMessageFor(model => model.PatientLName, "", new { @class = "k-error-colored" })
                    </div>


                </li>
                <li>

                    @Html.LabelFor(model => model.KWTPhone, new { @class = "" })

                    @Html.TextBoxFor(model => model.KWTPhone, new { @class = "k-textbox", style = "width: 100%;" })
                    <div>
                        @Html.ValidationMessageFor(model => model.KWTPhone, "", new { @class = "k-error-colored" })
                    </div>


                </li>
                <li>

                    @Html.LabelFor(model => model.USPhone, htmlAttributes: new { @class = "" })

                    @Html.TextBoxFor(model => model.USPhone, new { @class = "k-textbox", style = "width: 100%;" })
                    <div>
                        @Html.ValidationMessageFor(model => model.USPhone, "", new { @class = "k-error-colored" })
                    </div>


                </li>
                <li>

                    @Html.LabelFor(model => model.Agency, new { @class = "" })

                    @*@Html.EditorFor(model => model.Agency, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.Agency, new List<SelectListItem>(Model.Agencies.Select(a => new SelectListItem()
               {
                   Text = a.AgencyName,
                   Value = a.AgencyName

               }).ToList()), "Select Agency...", new { style = "width:50%" })
                    <div>
                        @Html.ValidationMessageFor(model => model.Agency, "", new { @class = "k-error-colored" })
                    </div>


                </li>
                <li>

                    @Html.LabelFor(model => model.HasCompanion, htmlAttributes: new { @class = "" })

                    @Html.EditorFor(model => model.HasCompanion, new { @class = "", style = "width: 100%;", title = "Text to show" })
                    <div>
                        @Html.ValidationMessageFor(model => model.HasCompanion, "", new { @class = "k-error-colored" })
                    </div>


                </li>
            </ul>
        </fieldset>
        <fieldset>
            <legend>Dignosis Details</legend>
            <ul class="fieldlist">

                <li>

                    @Html.LabelFor(model => model.Hospital, new { @class = "" })

                    @*@Html.EditorFor(model => model.Hospital, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.Hospital, new List<SelectListItem>(Model.Hospitals.Select(a => new SelectListItem()
               {
                   Text = a.HospitalName,
                   Value = a.HospitalName

               }).ToList()), "Select Hospital Name...", new { style = "width:90%" })
                    <div>
                        @Html.ValidationMessageFor(model => model.Hospital, "", new { @class = "k-error-colored" })
                    </div>

                </li>
                <li>


                    @Html.LabelFor(model => model.Specialty, new { @class = "" })

                    @*@Html.EditorFor(model => model.Patient.Doctor, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.Specialty, new List<SelectListItem>(Model.Sepcialities.Select(a => new SelectListItem()
               {
                   Text = a.Speciality,
                   Value = a.Speciality

               }).ToList()), "Select Specialty...", new { style = "width:50%" })
                    <div>
                        @Html.ValidationMessageFor(model => model.Specialty, "", new { @class = "k-error-colored" })
                    </div>


                </li>
                <li>


                    @Html.LabelFor(model => model.Diagnosis, new { @class = "" })


                    @*@Html.TextBoxFor(model => model.Diagnosis, new { @class = "k-textbox", style = "width: 100%;" })*@
                    @Html.TextAreaFor(model => model.Diagnosis, new { @class = "k-editor-textarea", style = "width: 100%;", maxlength = "250" })
                    <div>
                        @Html.ValidationMessageFor(model => model.Diagnosis, "", new { @class = "k-error-colored" })
                    </div>


                </li>
                <li>

                    @Html.LabelFor(model => model.Doctor, new { @class = "" })

                    @*@Html.EditorFor(model => model.Doctor, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.Doctor, new List<SelectListItem>(Model.Doctors.Select(a => new SelectListItem()
               {
                   Text = a.DoctorName,
                   Value = a.DoctorName

               }).ToList()), "Select Doctor Name...", new { style = "width:50%" })
                    <div>
                        @Html.ValidationMessageFor(model => model.Doctor, "", new { @class = "k-error-colored" })
                    </div>

                </li>
            </ul>
        </fieldset>

        <fieldset>
            <legend>Bank Details</legend>
            <ul class="fieldlist">
                <li>

                    @Html.LabelFor(model => model.IsBeneficiary, new {@class = "k-checkbox-label"})

                    @Html.EditorFor(model => model.IsBeneficiary, new {@class = "k-checkbox"})
                    <div>
                        @Html.ValidationMessageFor(model => model.IsBeneficiary, "", new {@class = "k-error-colored"})
                    </div>

                </li>
                <li>

                    @Html.LabelFor(model => model.BankName, new { @class = "" })

                    @*@Html.EditorFor(model => model.Doctor, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.BankName, new List<SelectListItem>(Model.Banks.Select(a => new SelectListItem()
               {
                   Text = a.BankName,
                   Value = a.BankName

               }).ToList()), "Select Bank Name...", new { style = "width:50%" })
                    <div>
                        @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "k-error-colored" })
                    </div>

                </li>
                @*<li>
                    @Html.LabelFor(model => model.BankName, new { @class = "" })


                    @Html.DropDownListFor(model => model.BankName, new List<SelectListItem>(Model.Banks.Select(a => new SelectListItem()
               {
                   Text = a.BankName,
                   Value = a.BankName

               }).ToList()), "Select Bank Name...", new { style = "width:60%"})
                    <div>
                        @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "k-error-colored" })
                    </div>


                </li>*@
                @*<li>
                             @Html.LabelFor(model => model.BankCode, new { @class = "" })


                             @Html.DropDownListFor(model => model.BankCode, new List<SelectListItem>(Model.Banks.Select(a => new SelectListItem()
                    {
                        Text = a.BankCode,
                        Value = a.BankCode

                    }).ToList()), "", new { style = "width:100%" })
                             @Html.ValidationMessageFor(model => model.BankCode, "", new { @class = "text-danger" })


                         </li>*@
                <li>

                    @Html.LabelFor(model => model.Iban, new { @class = "" })

                    @Html.TextBoxFor(model => model.Iban, new { @class = "k-textbox", style = "width:100%" })
                    <div>
                        @Html.ValidationMessageFor(model => model.Iban, "", new { @class = "k-error-colored" })
                    </div>

                </li>
            </ul>
        </fieldset>
        <fieldset>
            <legend>Treatment Details</legend>
            <ul class="fieldlist">
                <li>
                    @Html.LabelFor(model => model.FirstApptDAte, new { @class = "" })

                    @*@Html.EditorFor(model => model.FirstApptDAte, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.TextBoxFor(model => model.FirstApptDAte, "{0:MM/dd/yyyy}", new { @class = "", style = "width: 60%" })
                    <div>
                        @Html.ValidationMessageFor(model => model.FirstApptDAte, "", new { @class = "k-error-colored" })
                    </div>


                </li>


                <li>
                    @Html.LabelFor(model => model.EndTreatDate, new { @class = "" })

                    @*@Html.EditorFor(model => model.EndTreatDate, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.TextBoxFor(model => model.EndTreatDate, "{0:MM/dd/yyyy}", new { @class = "", style = "width: 60%" })
                    <div>
                        @Html.ValidationMessageFor(model => model.EndTreatDate, "", new { @class = "k-error-colored" })
                    </div>



                </li>


                <li>
                    @Html.LabelFor(model => model.IsActive, new { @class = "" })

                    @Html.EditorFor(model => model.IsActive, new { @class = "form-control", style = "width: 100%" })
                    <div>
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "k-error-colored" })
                    </div>


                </li>


                <li>
                    @Html.LabelFor(model => model.Notes, new { @class = "" })

                    @Html.TextAreaFor(model => model.Notes, new { @class = "k-editor-textarea", maxlength = "250", style = "width: 100%" })
                    <div>
                        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "k-error-colored" })
                    </div>


                </li>


            </ul>
        </fieldset>

        <div class="mt-3">
            <p>
                <a href="@Url.Action("List")" class="k-button"><i class="fa fa-arrow-left" style="color: lightblue"></i> Back to List</a>
                @*<a href="javascript:confirmCompanion()">  <i class="fa fa-times fa-2x" style="color: lightcoral"></i></a>*@
                <button type="submit" class="k-button"><i class="fa fa-save" style="color: blueviolet"></i> Save</button>
            </p>
        </div>

    </div>
}


@*@{ Html.RenderPartial("_CompanionConfirmation"); }*@
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        //$('.datepicker').datepicker({
        //    dateFormat: "m/d/yy"
        //});
        // $("#FirstApptDAte").val();

        $("#FirstApptDAte, #EndTreatDate").kendoDatePicker({
            min: new Date()
        });
        $.validator.setDefaults({ ignore: '' });
        $(document).ready(function () {

            $("#Hospital, #Agency, #Specialty, #Doctor").kendoDropDownList();
            //$("#BankName").kendoDropDownList();
            $("#KWTPhone").kendoMaskedTextBox({
                mask: "96500000000"
            });
            $("#PatientCID").kendoMaskedTextBox({
                mask: "AAAAAAAAAAAA"
            });
            $("#USPhone").kendoMaskedTextBox({
                mask: "+10000000000"
            });
            $("#Iban").kendoMaskedTextBox({
                mask: "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
            });
        });
    </script>

    @*<script type="text/javascript">
            var patientModel;
            function AddPatient(model) {


                $("#patientForm").submit();
                    $('#CompanionConfirmModal').modal('hide');


            }

            function confirmCompanion(model) {
                patientModel = model;
                console.log(model);

                $('#CompanionConfirmModal').modal('show');

            }

            $(function () {
                $("#CompanionConfirmModal").on('click', "#companionConfirm", function () {
                    AddPatient(patientModel);
                });
            });

        </script>*@

}
